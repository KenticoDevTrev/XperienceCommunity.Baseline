@{
    Layout = null;
    // This Layout leverages the Baseline "Async Script" system which offloads all javascript till after page load, but requires special care when building out your javascript logic.
}
<!DOCTYPE html>
<html dir="ltr" lang="@(System.Threading.Thread.CurrentThread.CurrentCulture.Name.Split('-')[0])">
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />

    @* window.OnScriptsLoaded = All javascript that depends on any library should use window.OnScriptsLoaded(function() { }, identifier) so it will run after the javascript is loaded, identifier is optional to ensure only ran once *@
    @* window.LoadScript = Loading javascript, should be window.LoadScript({src: string, header?: boolean, crossorigin?: string, appendAtEnd?: bool}) *@
    <cache enabled=true expires-after="@CacheMinuteTypes.VeryLong.ToTimeSpan()">
        <vc:async-script-functions />
    </cache>

    <environment exclude="Development">
        @* Defined in taskconfigs.js *@
        <link href="/css/bundles/main-bundle/main-bundle.min.css.gz" rel="stylesheet" asp-append-version="true" />

        @* start preloading javascript *@
        <link href="@(Html.AddFileVersionToPath("/js/bundles/footer-bundle/footer-bundle.min.js.gz"))" rel="preload" as="script" />
        <page-builder-mode exclude="Edit">
            <link href="@(Html.AddFileVersionToPath("/js/bundles/form-bundle/form-bundle.min.js.gz"))" rel="preload" as="script" />
        </page-builder-mode>
    </environment>
    <environment include="Development">
        @* Defined in taskconfigs.js *@
        <link href="/css/bundles/main-bundle/imported/aspnet-validation.css" rel="stylesheet" asp-append-version="true" />
        <link href="/css/bundles/main-bundle/imported/bootstrap.css" rel="stylesheet" asp-append-version="true" />
        <link href="/css/bundles/main-bundle/generated/styles.css" rel="stylesheet" asp-append-version="true" />
    </environment>


    @RenderSection("head", required: false)

    @* added after so if there is any manual meta data that below won't trigger even if there is a matching page on the content tree *@
    <vc:page-meta-data />

    <page-builder-mode include="Edit">
        <!-- Edit Mode -->
        <page-builder-styles />
        <link href="/css/individual/edit-mode.css" rel="stylesheet" />
    </page-builder-mode>

</head>
<body>
    <cache expires-after="CacheMinuteTypes.VeryLong.ToTimeSpan()">
        @{
            CacheScope.Begin();
        }
        <!-- Great place to place an Accessability quick nav to go to parts of your site! -->
        <!--<vc:ada-quick-nav />-->
        <cache-dependency cache-keys="@CacheScope.End()" />
    </cache>

    <header data-ktc-search-exclude>
        <cache expires-after="CacheMinuteTypes.VeryLong.ToTimeSpan()">
            @{
                CacheScope.Begin();
            }

            <!--<vc:main-navigation x-navigation-parent-path="/Navigation" x-css-class="main-nav" x-include-screen-reader-nav="true"/>-->
            <cache-dependency cache-keys="@CacheScope.End()" />
        </cache>
        @*
        // Only if needed context in the main nav, this is outside the cache so you can cache the entire nav and then just highlight the current page.
        <bl:navigation-page-selector x-parent-class="main-nav"></bl:navigation-page-selector>
        *@
    </header>

    @RenderSection("breadcrumb", false)

    @RenderBody()

    <footer data-ktc-search-exclude>
    </footer>
    
    <page-builder-mode include="Edit">
        <!-- Edit mode-->
        <page-data-context initialized="true">
            <page-builder-scripts />
        </page-data-context>
        <!--<script src="/js/individual/scripts/MyComponentsConfiguration.js"></script>-->
    </page-builder-mode>
    <page-builder-mode exclude="Edit">
        @* These are needed for Forms, edit mode includes these as well so only need when not in edit mode *@
        <script>LoadScript({ src: "@(Html.AddFileVersionToPath("/js/bundles/form-bundle/form-bundle.min.js.gz"))" })</script>
    </page-builder-mode>

    <!-- Javascripts File -->
    <environment exclude="Development">
        @* Defined in taskconfigs.js *@
        <script>LoadScript({ src: "@(Html.AddFileVersionToPath("/js/bundles/footer-bundle/footer-bundle.min.js.gz"))" })</script>
    </environment>
    <environment include="Development">
        @* Defined in taskconfigs.js *@
        <script>LoadScript({ src: "/js/bundles/footer-bundle/generated/helpers.js" })</script>
        <script>LoadScript({ src: "/js/bundles/footer-bundle/imported/aspnet-validation.min.js" })</script>
        <script>LoadScript({ src: "/js/bundles/footer-bundle/imported/bootstrap.js" })</script>
    </environment>
    <script type="text/javascript">
        @* aspnet validator hookup *@
        OnScriptsLoaded(function () {
            // Exposes window['aspnetValidation']
            var v = new aspnetValidation.ValidationService();
            v.bootstrap();
        });
    </script>

    @RenderSection("bottom", required: false)

    <script>
        OnScriptsLoaded(function () {
            @*
                These are to initialize various functionality pieces
            GlobalMethods.InitializeOtherTools();
            GlobalMethods.InitializeAccessability();
            GlobalMethods.InitializeCanvas();
            GlobalMethods.InitializeRedirectTabs();
                *@
        });
    </script>

    <cache enabled=true expires-after="@CacheMinuteTypes.VeryLong.ToTimeSpan()">
        @* This will run last after all scripts loaded, and will run the Preload methods
            Content should be:

            window.ScriptsLoaded = true;
            for (var queuedScripts = window.PreloadQueue || [], i = 0; i < queuedScripts.length; i++)
            queuedScripts[i]();
        *@
        <vc:async-script-loader x-script-runner-path="@(Html.AddFileVersionToPath("/js/individual/scripts/run-queued-scripts.min.js.gz"))" />
    </cache>
</body>
</html>