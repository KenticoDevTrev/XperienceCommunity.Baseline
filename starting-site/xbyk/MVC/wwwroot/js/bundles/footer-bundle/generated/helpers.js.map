{"version":3,"file":"helpers.js","mappings":";;;;;;;;;;;;;AAAA,MAAa,WAAW;CAQvB;AARD,kCAQC;;;;;;;UCRD;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;;;;ACtBA,qHAAmD;AASnD,kEAAkE;AAClE,MAAM,CAAC,WAAW,GAAG,yBAAW,CAAC","sources":["webpack://mvc/./typescript/Helper/Helpers/SiteMethods.ts","webpack://mvc/webpack/bootstrap","webpack://mvc/./typescript/Helper/index.ts"],"sourcesContent":["export class SiteMethods {\r\n    /*static hello() : string {\r\n        return \"Hello\";\r\n    }\r\n\r\n    static world() : string {\r\n        return \"World\";\r\n    }*/\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { SiteMethods } from './Helpers/SiteMethods'\r\n\r\n// declare my helper in the window interface\r\ndeclare global {\r\n    interface Window {\r\n        SiteMethods: SiteMethods\r\n    }\r\n}\r\n\r\n// Can access your methods with window.SiteMethods.theMethodName()\r\nwindow.SiteMethods = SiteMethods;\r\n"],"names":[],"sourceRoot":""}