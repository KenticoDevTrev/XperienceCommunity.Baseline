//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS.MediaLibrary;

namespace Generic
{
	/// <summary>
	/// Defines a contract for content types with the <see cref="IBaseMetadata"/> reusable schema assigned.
	/// </summary>
	public interface IBaseMetadata
	{
		/// <summary>
		/// Code name of the reusable field schema.
		/// </summary>
		public const string REUSABLE_FIELD_SCHEMA_NAME = "Base.Metadata";

        /// <summary>
        /// MetaData_PageName.
        /// </summary>
        public string MetaData_PageName { get; set; }

        /// <summary>
        /// MetaData_Title.
        /// </summary>
        public string MetaData_Title { get; set; }


		/// <summary>
		/// MetaData_Description.
		/// </summary>
		public string MetaData_Description { get; set; }


		/// <summary>
		/// MetaData_Keywords.
		/// </summary>
		public string MetaData_Keywords { get; set; }


        /// <summary>
        /// MetaData_ThumbnailSmall.  NOTE: This won't actually contain anything even if the data exists.
        /// 
        /// Use the IMetaDataRepository.GetMetaDataAsync(TreeCultureIdentity) to retrieve the metadata based on this page and then check for the thumbnail small/large if you need it personally.
        /// This will use the IContentItemReferenceService to read the raw JSON Data and return the reference GUIDs, which you can then use with the IMediaRepository to get any assets configured.
        /// 
        /// Because of this limitation, for your own content types, you may want to specify your actual Image Content Types for the selector, instead of this filter.
        /// </summary>
        public IEnumerable<IGenericHasImage> MetaData_ThumbnailSmall { get; set; }


        /// <summary>
        /// MetaData_ThumbnailLarge.  NOTE: This won't actually contain anything even if the data exists.
        /// 
        /// Use the IMetaDataRepository.GetMetaDataAsync(TreeCultureIdentity) to retrieve the metadata based on this page and then check for the thumbnail small/large if you need it personally.
        /// This will use the IContentItemReferenceService to read the raw JSON Data and return the reference GUIDs, which you can then use with the IMediaRepository to get any assets configured.
        /// 
        /// Because of this limitation, for your own content types, you may want to specify your actual Image Content Types for the selector, instead of this filter.
        /// </summary>
        public IEnumerable<IGenericHasImage> MetaData_ThumbnailLarge { get; set; }


        /// <summary>
        /// MetaData_NoIndex.
        /// </summary>
        public bool MetaData_NoIndex { get; set; }
    }
}